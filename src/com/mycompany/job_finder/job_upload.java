/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.mycompany.job_finder;

import java.awt.Color;
import java.awt.Component;
import java.awt.Dimension;
import java.awt.FlowLayout;
import java.awt.Font;
import java.awt.Insets;

import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.WindowEvent;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.List;
import java.util.ArrayList;
import javax.swing.JButton;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JTextArea;
import javax.swing.JTextField;
import org.netbeans.lib.awtextra.AbsoluteConstraints;
import org.netbeans.lib.awtextra.AbsoluteLayout;

/**
 *
 * @author radhe
 */
public class job_upload extends javax.swing.JFrame {

    String job_name, company_address, job_salary, job_description, recruiter_id, recruiter_name;
    JTextField job_name_TextField, company_address_TextField, job_salary_TextField;
    JTextArea job_description_Textarea;
    JLabel salaryLabel, descriptionLabel;
    JButton job_upload, delete_button;
    JPanel panel_new_1;

    private List<JPanel> jobPanels = new ArrayList<>();

    public job_upload() {

        initComponents();
        loadJobData();
        loadPanels();

        setSize(1540, 1000);
        setLayout(null);
        jTextField1.setBounds(20, 50, 1150, 50); // search by job name
        // jTextField2.setBounds(630, 50, 520, 50); // location
        jButton1.setBounds(1200, 50, 130, 50);
//        jPanel1.setBounds(1, 120, 1480, 980);
        jScrollPane8.setBounds(10, 120, 1500, 630);
        
        setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    public void printData(String name, String recruiter_id) {
        this.recruiter_id = recruiter_id;
        this.recruiter_name = name;
        System.out.print("username=" + recruiter_name + "\n recruiter id=" + recruiter_id);
    }

    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTextField1 = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jScrollPane8 = new javax.swing.JScrollPane();
        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jButton2 = new javax.swing.JButton();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenu2 = new javax.swing.JMenu();
        jMenuItem1 = new javax.swing.JMenuItem();
        jMenu3 = new javax.swing.JMenu();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jTextField1.setFont(new java.awt.Font("Lucida Bright", 0, 18)); // NOI18N
        jTextField1.setText("Find Jobs . . .");
        jTextField1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTextField1KeyReleased(evt);
            }
        });

        jButton1.setFont(new java.awt.Font("Malgun Gothic", 0, 18)); // NOI18N
        jButton1.setText("Search");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jScrollPane8.setAlignmentX(4.0F);

        jPanel1.setBackground(new java.awt.Color(204, 255, 255));
        jPanel1.setLayout(new java.awt.GridLayout(0, 3, 30, 30));

        jPanel2.setBackground(new java.awt.Color(204, 255, 255));
        jPanel2.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jButton2.setBackground(new java.awt.Color(255, 153, 102));
        jButton2.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jButton2.setForeground(new java.awt.Color(255, 255, 255));
        jButton2.setText("Add new job");
        jButton2.setBorder(new javax.swing.border.MatteBorder(null));
        jButton2.setCursor(new java.awt.Cursor(java.awt.Cursor.MOVE_CURSOR));
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        jPanel2.add(jButton2, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 80, 190, 150));

        jPanel1.add(jPanel2);

        jScrollPane8.setViewportView(jPanel1);

        jMenu1.setText("Home");
        jMenuBar1.add(jMenu1);

        jMenu2.setText("recruitement status");

        jMenuItem1.setText("Status");
        jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem1ActionPerformed(evt);
            }
        });
        jMenu2.add(jMenuItem1);

        jMenuBar1.add(jMenu2);

        jMenu3.setText("Message");
        jMenuBar1.add(jMenu3);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 420, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(413, 413, 413)
                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addComponent(jScrollPane8, javax.swing.GroupLayout.PREFERRED_SIZE, 1183, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jTextField1)
                    .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(63, 63, 63)
                .addComponent(jScrollPane8, javax.swing.GroupLayout.DEFAULT_SIZE, 475, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
    
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        panel_new_1 = new JPanel(new AbsoluteLayout());
        panel_new_1.setPreferredSize(new Dimension(400, 500)); // Adjust size as needed

        job_name_TextField = new JTextField(20);
        company_address_TextField = new JTextField(20);
        job_salary_TextField = new JTextField(20);
        job_description_Textarea = new JTextArea(5, 20);
        salaryLabel = new JLabel("salary");
        descriptionLabel = new JLabel("Description");
        job_upload = new JButton("Upload");
        delete_button = new JButton("Delete");

        job_name_TextField.setFont(new Font("Bahnschrift", Font.PLAIN, 24));
        job_name_TextField.setToolTipText("Enter job name");
        panel_new_1.add(job_name_TextField, new AbsoluteConstraints(20, 15, 350, 40));
        company_address_TextField.setFont(new Font("Bahnschrift", Font.PLAIN, 18));
        company_address_TextField.setToolTipText("Enter company address");
        panel_new_1.add(company_address_TextField, new AbsoluteConstraints(25, 70, 300, 30));
        salaryLabel.setFont(new Font("Dialog", Font.ITALIC, 16));
        panel_new_1.add(salaryLabel, new AbsoluteConstraints(20, 110, 50, 30));
        job_salary_TextField.setFont(new Font("Bahnschrift", Font.PLAIN, 18));
        job_salary_TextField.setToolTipText("Enter job salary");
        panel_new_1.add(job_salary_TextField, new AbsoluteConstraints(80, 110, 250, 40));
        descriptionLabel.setFont(new Font("Dialog", Font.ITALIC, 16));
        panel_new_1.add(descriptionLabel, new AbsoluteConstraints(20, 170, 80, 30));
        job_description_Textarea.setFont(new Font("Bahnschrift", Font.PLAIN, 16));
        job_description_Textarea.setToolTipText("Enter job Description");
        panel_new_1.add(job_description_Textarea, new AbsoluteConstraints(60, 200, 380, 160));
        job_upload.setBackground(new Color(153, 255, 153));
        panel_new_1.add(job_upload, new AbsoluteConstraints(200, 400, 100, 50));

        delete_button.setBackground(new Color(255, 102, 102));
        panel_new_1.add(delete_button, new AbsoluteConstraints(400, 5, 70, 35));

        panel_new_1.setBackground(new Color(255, 200, 200)); // Light pink background

        job_upload.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent evt) {
                if (isPanelEmpty(panel_new_1)) {
                    JOptionPane.showMessageDialog(job_upload.this, "Please fill all the details");
                } else {
                    insertJobData(job_name_TextField.getText(), company_address_TextField.getText(), job_salary_TextField.getText(), job_description_Textarea.getText());
                }
            }
        });

        delete_button.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent evt) {
                deleteJobFromDatabase(job_name_TextField.getText()); // Delete from database
                jPanel1.remove(panel_new_1); // Remove from UI
                jobPanels.remove(panel_new_1); // Remove from jobPanels list
                jPanel1.revalidate();
                jPanel1.repaint();
            }
        });

        jobPanels.add(panel_new_1);
        jPanel1.add(panel_new_1);
        jPanel1.revalidate();
        jPanel1.repaint();
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem1ActionPerformed
        Job_status obj = new Job_status();
        obj.setVisible(true);
    }//GEN-LAST:event_jMenuItem1ActionPerformed

    private void jTextField1KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField1KeyReleased
    
    String input = jTextField1.getText().trim().toLowerCase();
    
    boolean found = false;// check job is found or not
    // Clear the existing panels
    jPanel1.removeAll();

    if (input.isEmpty()) {
        // If search input is empty, reload all job panels
        loadJobData(); 
        loadPanels();
    } else {
        String jobName = null;
        // Filter job panels by job name
        for (JPanel panel : jobPanels) {
            JTextField jobNameField = (JTextField) panel.getComponent(0); // assuming jobNameField is the first component in panel
            jobName = jobNameField.getText().trim().toLowerCase();

            if (jobName.contains(input)) {
                jPanel1.add(panel);
                found = true;
            }
            
        }
         // If no matching job was found, show the message
    if (!found) {
        JOptionPane.showMessageDialog(job_upload.this, "Job not found.");
    }
        
    }

    jPanel1.revalidate();
    jPanel1.repaint();        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField1KeyReleased

    private boolean isPanelEmpty(JPanel panel) {
        Component[] components = panel.getComponents();
        for (Component component : components) {
            if (component instanceof JTextField) {
                JTextField textField = (JTextField) component;
                if (textField.getText().trim().isEmpty()) {
                    return true;
                }
            } else if (component instanceof JTextArea) {
                JTextArea textArea = (JTextArea) component;
                if (textArea.getText().trim().isEmpty()) {
                    return true;
                }
            }
        }
        return false;
    }

    private void insertJobData(String jobName, String companyAddress, String jobSalary, String jobDescription) {
        String url = "jdbc:mysql://localhost:3306/jobfinder";
        String db_username = "root";
        String db_password = "root";

        try (Connection conn = DriverManager.getConnection(url, db_username, db_password)) {
            String sql = "INSERT INTO job_upload (job_name, company_address, job_salary, job_description,recruiter_id,recruiter_name) VALUES (?, ?, ?, ?,?,?)";
            PreparedStatement pstmt = conn.prepareStatement(sql);
            pstmt.setString(1, jobName);
            pstmt.setString(2, companyAddress);
            pstmt.setString(3, jobSalary);
            pstmt.setString(4, jobDescription);
            pstmt.setString(5, recruiter_id);
            pstmt.setString(6, recruiter_name);
            System.out.println("username=" + recruiter_name + "recruiter id =" + recruiter_id);
            pstmt.executeUpdate();

            JOptionPane.showMessageDialog(this, "Job uploaded successfully");
            job_upload.setVisible(false);
        } catch (SQLException e) {
            e.printStackTrace();
            JOptionPane.showMessageDialog(job_upload.this, "Error uploading job");
        }
    }

    private void deleteJobFromDatabase(String jobName) {
        String url = "jdbc:mysql://localhost:3306/jobfinder";
        String db_username = "root";
        String db_password = "root";

        try (Connection conn = DriverManager.getConnection(url, db_username, db_password)) {
            String sql = "DELETE FROM job_upload WHERE job_name = ?";
            PreparedStatement pstmt = conn.prepareStatement(sql);
            pstmt.setString(1, jobName);
            int rowsAffected = pstmt.executeUpdate();

            if (rowsAffected > 0) {
                JOptionPane.showMessageDialog(this, "Job deleted successfully");
            } else {
                JOptionPane.showMessageDialog(this, "Job not found or already deleted");
            }
        } catch (SQLException e) {
            e.printStackTrace();
            JOptionPane.showMessageDialog(this, "Error deleting job");
        }
    }

    private void loadJobData() {
        jobPanels.clear();
        String url = "jdbc:mysql://localhost:3306/jobfinder";
        String db_username = "root";
        String db_password = "root";

        try (Connection conn = DriverManager.getConnection(url, db_username, db_password)) {
            String sql = "SELECT job_name, company_address, job_salary, job_description FROM job_upload";
            PreparedStatement pstmt = conn.prepareStatement(sql);
            ResultSet rs = pstmt.executeQuery();

            while (rs.next()) {
                String jobName = rs.getString("job_name");
                String companyAddress = rs.getString("company_address");
                String jobSalary = rs.getString("job_salary");
                String jobDescription = rs.getString("job_description");

                // Create and add the job panel to the UI
                JPanel jobPanel = createJobPanel(jobName, companyAddress, jobSalary, jobDescription);
                jobPanels.add(jobPanel);
//            jPanel1.add(jobPanel);
            }
            jPanel1.revalidate();
            jPanel1.repaint();
        } catch (SQLException e) {
            e.printStackTrace();
        }
    }

    private void loadPanels() {
        for (JPanel panel : jobPanels) {
            jPanel1.add(panel);
        }
    }

    private JPanel createJobPanel(String jobName, String companyAddress, String jobSalary, String jobDescription) {
        JPanel panel = new JPanel(new AbsoluteLayout());
        panel.setPreferredSize(new Dimension(400, 500));

        JTextField jobNameField = new JTextField(jobName, 20);
        jobNameField.setFont(new Font("Bahnschrift", Font.PLAIN, 24));
        JTextField companyAddressField = new JTextField(companyAddress, 20);
        companyAddressField.setFont(new Font("Bahnschrift", Font.PLAIN, 20));
        JTextField jobSalaryField = new JTextField(jobSalary, 20);
        jobSalaryField.setFont(new Font("Bahnschrift", Font.PLAIN, 20));
        JTextArea jobDescriptionArea = new JTextArea(jobDescription, 5, 20);
        jobDescriptionArea.setFont(new Font("Bahnschrift", Font.PLAIN, 20));
//        JButton ApplyButton = new JButton("Apply");
        JButton deleteButton = new JButton("Delete");

        panel.add(jobNameField, new AbsoluteConstraints(20, 15, 350, 40));
        panel.add(companyAddressField, new AbsoluteConstraints(25, 70, 300, 30));
        panel.add(new JLabel("salary"), new AbsoluteConstraints(20, 110, 50, 30));
        panel.add(jobSalaryField, new AbsoluteConstraints(80, 110, 250, 30));
        panel.add(new JLabel("Description"), new AbsoluteConstraints(20, 170, 80, 30));
        panel.add(jobDescriptionArea, new AbsoluteConstraints(60, 200, 380, 160));
        deleteButton.setBackground(new Color(255, 102, 102));
        panel.add(deleteButton, new AbsoluteConstraints(400, 5, 70, 35));
        panel.setBackground(new Color(255, 200, 200));

        deleteButton.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent evt) {
                deleteJobFromDatabase(jobName); // Pass jobName directly
                jPanel1.remove(panel); // Remove the correct panel
                jobPanels.remove(panel); // Remove the correct panel from jobPanels list
                jPanel1.revalidate();
                jPanel1.repaint();
            }
        });

        return panel;
    }

    @Override
    protected void processWindowEvent(WindowEvent e) {
        if (e.getID() == WindowEvent.WINDOW_CLOSING) {
            if (panel_new_1 != null && isPanelEmpty(panel_new_1)) {
                int result = JOptionPane.showConfirmDialog(this, "Some job details are empty. Do you want to close the app?", "Confirm Close", JOptionPane.YES_NO_OPTION);
                if (result == JOptionPane.NO_OPTION) {
                    return;
                }
            }
        }
        super.processWindowEvent(e);
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(job_upload.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(job_upload.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(job_upload.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(job_upload.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new job_upload().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenu jMenu3;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane8;
    private javax.swing.JTextField jTextField1;
    // End of variables declaration//GEN-END:variables
}
