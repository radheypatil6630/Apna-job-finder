/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.mycompany.job_finder;

import java.sql.ResultSetMetaData;
import java.sql.DatabaseMetaData;
import java.awt.Color;
import java.awt.Component;
import java.awt.Dimension;
import java.awt.Font;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.List;
import java.util.TimeZone;
import javax.swing.JButton;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JTextArea;
import javax.swing.JTextField;
import org.netbeans.lib.awtextra.AbsoluteConstraints;
import org.netbeans.lib.awtextra.AbsoluteLayout;

/**
 *
 * @author radhe
 */
public class Job_search extends javax.swing.JFrame {
  String job_name, company_address, job_salary, job_description, recruiter_id,recruiter_name,candidate_name,candidate_id,mobile_no;
    JTextField job_name_TextField, company_address_TextField, job_salary_TextField;
    JTextArea job_description_Textarea;
    JLabel salaryLabel, descriptionLabel;
    JPanel panel_new_1;
    String status="accept";
    private List<JPanel> jobPanels = new ArrayList<>();    
   
   
    public Job_search() {
        initComponents();
        loadJobData();
        
        
           setSize(1540, 1000);
        setLayout(null);
        jTextField1.setBounds(20, 50, 1150, 50); // search by job name
       // jTextField2.setBounds(630, 50, 520, 50); // location
        searchbtn.setBounds(1200, 50, 130, 50);
//        jPanel1.setBounds(1, 120, 1480, 980);
        jScrollPane8.setBounds(10, 120, 1500, 630);
        
        //scrollbar1.setBounds(1510, 0, 20, 1000);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTextField1 = new javax.swing.JTextField();
        searchbtn = new javax.swing.JButton();
        jScrollPane8 = new javax.swing.JScrollPane();
        jPanel1 = new javax.swing.JPanel();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenu2 = new javax.swing.JMenu();
        jMenuItem1 = new javax.swing.JMenuItem();
        jMenu3 = new javax.swing.JMenu();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jTextField1.setFont(new java.awt.Font("Lucida Bright", 0, 18)); // NOI18N
        jTextField1.setText("Find Jobs . . .");

        searchbtn.setFont(new java.awt.Font("Malgun Gothic", 0, 18)); // NOI18N
        searchbtn.setText("Search");
        searchbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchbtnActionPerformed(evt);
            }
        });

        jScrollPane8.setAlignmentX(4.0F);

        jPanel1.setBackground(new java.awt.Color(204, 255, 255));
        jPanel1.setLayout(new java.awt.GridLayout(0, 3, 30, 30));
        jScrollPane8.setViewportView(jPanel1);

        jMenu1.setText("Home");
        jMenuBar1.add(jMenu1);

        jMenu2.setText("History");
        jMenu2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenu2ActionPerformed(evt);
            }
        });

        jMenuItem1.setText("Applied job");
        jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem1ActionPerformed(evt);
            }
        });
        jMenu2.add(jMenuItem1);

        jMenuBar1.add(jMenu2);

        jMenu3.setText("Message");
        jMenuBar1.add(jMenu3);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 420, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(413, 413, 413)
                .addComponent(searchbtn, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(260, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addComponent(jScrollPane8, javax.swing.GroupLayout.PREFERRED_SIZE, 1183, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jTextField1)
                    .addComponent(searchbtn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(63, 63, 63)
                .addComponent(jScrollPane8, javax.swing.GroupLayout.DEFAULT_SIZE, 522, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void searchbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchbtnActionPerformed
   
    
//  String url = "jdbc:mysql://localhost:3306/jobfinder?serverTimezone=UTC";
//    String db_username = "root";
//    String db_password = "root";
//
//    try (Connection conn = DriverManager.getConnection(url, db_username, db_password)) {
//        String sql = "SELECT * FROM job_upload WHERE job_name = ?";
//        System.out.println("Executing SQL query: " + sql);
//        PreparedStatement pstmt = conn.prepareStatement(sql);
//        pstmt.setString(1, jTextField1.getText());
//        ResultSet rs = pstmt.executeQuery();
//
//        // Hide all existing job panels
//        for (Component component : jPanel1.getComponents()) {
//            component.setVisible(false);
//        }
//
//        boolean hasData = false;
//
//        while (rs.next()) {
//            hasData = true;
//            String jobName = rs.getString("job_name");
//            String companyAddress = rs.getString("company_address");
//            String jobSalary = rs.getString("job_salary");
//            String jobDescription = rs.getString("job_description");
//
//            System.out.println("Data: " + jobName + " " + companyAddress + " " + jobSalary + " " + jobDescription);
//
//            JPanel jobPanel = createJobPanel(jobName, companyAddress, jobSalary, jobDescription);
//            jobPanels.add(jobPanel);
//            jPanel1.add(jobPanel);
//            jobPanel.setVisible(true);
//        }
//
//        if (!hasData) {
//            JOptionPane.showMessageDialog(this, "Job not found");
//            jTextField1.setText("");
//        } else {
//            JOptionPane.showMessageDialog(this, "Job found");
//        }
//
//     } catch (SQLException e) {
//        System.out.println("Connection failed!");
//        e.printStackTrace();
//     }
String url = "jdbc:mysql://localhost:3306/jobfinder?serverTimezone=UTC";
    String db_username = "root";
    String db_password = "root";

     try (Connection conn = DriverManager.getConnection(url, db_username, db_password)) {
        String sql = "SELECT * FROM job_upload WHERE job_name = ?";
        System.out.println("Executing SQL query: " + sql);
        PreparedStatement pstmt = conn.prepareStatement(sql);
        pstmt.setString(1, jTextField1.getText());
        ResultSet rs = pstmt.executeQuery();

        boolean hasData = false;

        while (rs.next()) {
            hasData = true;
            String jobName = rs.getString("job_name");
            String companyAddress = rs.getString("company_address");
            String jobSalary = rs.getString("job_salary");
            String jobDescription = rs.getString("job_description");

            System.out.println("Data: " + jobName + " " + companyAddress + " " + jobSalary + " " + jobDescription);

            // Hide all existing job panels
            setAllJobPanelsVisible(false);

            JPanel jobPanel = getJobPanelByName(jobName);
            if (jobPanel != null) {
                jobPanel.setVisible(true);
            } else {
                jobPanel = JobPanel(jobName, companyAddress, jobSalary, jobDescription);
                jobPanels.add(jobPanel);
                jPanel1.add(jobPanel);
                jobPanel.setVisible(true);
            }
        }

        if (!hasData) {
            jTextField1.setText("");
            JOptionPane.showMessageDialog(this, "Job not found");
        } else {
            JOptionPane.showMessageDialog(this, "Job found");
        }

        jPanel1.revalidate();
        jPanel1.repaint();

    } catch (SQLException e) {
        System.out.println("Connection failed!");
        e.printStackTrace();
    }

  
    }//GEN-LAST:event_searchbtnActionPerformed

    
    private void setAllJobPanelsVisible(boolean visible) {
    for (Component component : jPanel1.getComponents()) {
        component.setVisible(visible);
    }
}

private JPanel getJobPanelByName(String jobName) {
    for (Component component : jPanel1.getComponents()) {
        if (component instanceof JPanel) {
            JPanel jobPanel = (JPanel) component;
            if (jobPanel.getName().equals(jobName)) {
                return jobPanel;
            }
        }
    }
    return null;
}

private JPanel JobPanel(String jobName, String companyAddress, String jobSalary, String jobDescription) {
    // Create and return a JPanel with the job details
    JPanel jobPanel = new JPanel();
    jobPanel.setName(jobName); // Set the name of the panel to the job name
    // Add components to jobPanel (e.g., labels for jobName, companyAddress, jobSalary, jobDescription)
    // Example:
    jobPanel.add(new javax.swing.JLabel(jobName));
    jobPanel.add(new javax.swing.JLabel(companyAddress));
    jobPanel.add(new javax.swing.JLabel(jobSalary));
    jobPanel.add(new javax.swing.JLabel(jobDescription));
    return jobPanel;
}

    private void jMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem1ActionPerformed
        
     //   insertJobData(job_name_TextField.getText(), company_address_TextField.getText(), job_salary_TextField.getText());
        
        Applied_jobs obj=new Applied_jobs();
        obj.setVisible(true);
    }//GEN-LAST:event_jMenuItem1ActionPerformed

    private void jMenu2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenu2ActionPerformed
      
    }//GEN-LAST:event_jMenu2ActionPerformed

    private void insertJobData(String jobName, String companyAddress, String jobSalary) {
        String url = "jdbc:mysql://localhost:3306/jobfinder";
        String db_username = "root";
        String db_password = "root";

        try (Connection conn = DriverManager.getConnection(url, db_username, db_password)) {
            String sql = "INSERT INTO applied_jobs (job_name, company_address, job_salary) VALUES (?, ?, ?)";
            PreparedStatement pstmt = conn.prepareStatement(sql);
            pstmt.setString(1, jobName);
            pstmt.setString(2, companyAddress);
            pstmt.setString(3, jobSalary);
//            pstmt.setString(4, jobDescription);
            pstmt.executeUpdate();

//            JOptionPane.showMessageDialog(this, "Job saved successfully");
        } catch (SQLException e) {
            e.printStackTrace();
//            JOptionPane.showMessageDialog(this, "Error uploading job");
        }
    }
 private void loadJobData() {
    String url = "jdbc:mysql://localhost:3306/jobfinder?serverTimezone=UTC";
    String db_username = "root";
    String db_password = "root";

    try (Connection conn = DriverManager.getConnection(url, db_username, db_password)) {
        System.out.println("Connection established");

        // Verify database connection
        DatabaseMetaData metaData = conn.getMetaData();
        System.out.println("Database Product Name: " + metaData.getDatabaseProductName());
//        System.out.println("Database Product Version: " + metaData.getDatabaseProductVersion());
//        System.out.println("Driver Name: " + metaData.getDriverName());
//        System.out.println("Driver Version: " + metaData.getDriverVersion());
//        System.out.println("Current Timezone: " + TimeZone.getDefault().getID());

        // Verify table existence
        ResultSet tables = metaData.getTables(null, null, "job_upload", null);
        if (tables.next()) {
            System.out.println("Table job_upload exists");
        } else {
            System.out.println("Table job_upload does not exist");
        }

        String sql = "SELECT * FROM job_upload";
        System.out.println("Executing SQL query: " + sql);
        PreparedStatement pstmt = conn.prepareStatement(sql);
        ResultSet rs = pstmt.executeQuery();

        // Print ResultSet metadata
        ResultSetMetaData rsmd = rs.getMetaData();
        int columnsNumber = rsmd.getColumnCount();
        System.out.println("Columns in ResultSet:");
        for (int i = 1; i <= columnsNumber; i++) {
            System.out.println(rsmd.getColumnName(i) + " (" + rsmd.getColumnTypeName(i) + ")");
        }

        boolean hasData = false;

        while (rs.next()) {
            hasData = true;
            String jobName = rs.getString("job_name");
            String companyAddress = rs.getString("company_address");
            String jobSalary = rs.getString("job_salary");
            String jobDescription = rs.getString("job_description");
                    recruiter_id= rs.getString("recruiter_id");
                    recruiter_name=rs.getString("recruiter_name");
            System.out.println("Data: " + jobName + " " + companyAddress + " " + jobSalary + " " + jobDescription+" "+recruiter_id);

            // Create and add the job panel to the UI
            JPanel jobPanel = createJobPanel(jobName, companyAddress, jobSalary, jobDescription);
            jobPanels.add(jobPanel);
            jPanel1.add(jobPanel);
        }

        if (!hasData) {
            System.out.println("No data found in job_upload table");
        }

        jPanel1.revalidate();
        jPanel1.repaint();
    } catch (SQLException e) {
        e.printStackTrace();
    }
}

  public void printText(String candidate_name,String candidate_id,String mob_no){
      this.candidate_name=candidate_name;
      this.candidate_id=candidate_id;
      this.mobile_no=mob_no;
          System.out.println("Job search  username: " + candidate_name+"\n candidate id="+candidate_id+"\n mobile no="+mob_no);
    }
    private JPanel createJobPanel(String jobName, String companyAddress, String jobSalary, String jobDescription) {
        System.out.println("panel create");
        JPanel panel = new JPanel(new AbsoluteLayout());
        panel.setPreferredSize(new Dimension(400, 500));
        
        JTextField jobNameField = new JTextField(jobName, 20);
         jobNameField.setFont(new Font("Bahnschrift", Font.PLAIN, 24));
        JTextField companyAddressField = new JTextField(companyAddress, 20);
        companyAddressField.setFont(new Font("Bahnschrift", Font.PLAIN, 18));
        JTextField jobSalaryField = new JTextField(jobSalary, 20);
        jobSalaryField.setFont(new Font("Bahnschrift", Font.PLAIN, 18));
        JTextArea jobDescriptionArea = new JTextArea(jobDescription, 5, 20);
        jobDescriptionArea.setFont(new Font("Bahnschrift", Font.PLAIN, 18));
        JButton ApplyButton = new JButton("Apply");

        jobNameField.setEditable(false);
        companyAddressField.setEditable(false);
        jobSalaryField.setEditable(false);
        jobDescriptionArea.setEditable(false);

        ApplyButton.setBackground(new Color(255, 102, 102));

        panel.add(jobNameField, new AbsoluteConstraints(20, 15, 350, 40));
        panel.add(companyAddressField, new AbsoluteConstraints(25, 70, 300, 30));
        panel.add(new JLabel("salary"), new AbsoluteConstraints(20, 110, 50, 30));
        panel.add(jobSalaryField, new AbsoluteConstraints(80, 110, 250, 30));
        panel.add(new JLabel("Description"), new AbsoluteConstraints(20, 170, 80, 30));
        panel.add(jobDescriptionArea, new AbsoluteConstraints(60, 200, 380, 160));
        panel.add(ApplyButton, new AbsoluteConstraints(200, 400, 100, 50));
        panel.setBackground(new Color(255, 200, 200));
        
        ApplyButton.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent evt) {
                Job_apply applyObj=new Job_apply();
//                recruiter_id= rs.getString("recruiter_id");
                applyObj.passData(candidate_name,candidate_id,mobile_no,jobName,jobSalary,recruiter_name,recruiter_id);
                applyObj.setVisible(true);
            }
        });

        return panel;
    }

//    jMenuItem1.addActionListener(new ActionListener() {
//            @Override
//            public void actionPerformed(ActionEvent e) {
//                Applied_jobs obj = new Applied_jobs();
//                obj.setVisible(true);
//            }
//        });
    
   
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
//         */
//    
//        //</editor-fold>

       try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (Exception ex) {
            java.util.logging.Logger.getLogger(Job_search.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }

        java.awt.EventQueue.invokeLater(() -> new Job_search().setVisible(true));
    
    
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenu jMenu3;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane8;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JButton searchbtn;
    // End of variables declaration//GEN-END:variables
}
