/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.mycompany.job_finder;

import java.awt.Color;
import java.awt.Dimension;
import java.awt.Font;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.ResultSetMetaData;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import javax.swing.JButton;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JTextArea;
import javax.swing.JTextField;
import javax.swing.table.DefaultTableModel;
import org.netbeans.lib.awtextra.AbsoluteConstraints;
import org.netbeans.lib.awtextra.AbsoluteLayout;

/**
 *
 * @author radhe
 */
public class Job_search extends javax.swing.JFrame {
  String job_name, company_address, job_salary, job_description, recruiter_id,recruiter_name,candidate_name,candidate_id,mobile_no;
    JTextField job_name_TextField, company_address_TextField, job_salary_TextField;
    JTextArea job_description_Textarea;
    JLabel salaryLabel, descriptionLabel;
    JPanel panel_new_1;
    String status="accept";
    private List<JPanel> jobPanels = new ArrayList<>();    
    Map<String, JPanel> jobsearchPanels = new HashMap<>();
    
//     private List<Object[]> data = new ArrayList<>();
    DefaultTableModel model;
   
   
    public Job_search() {
        initComponents();
        loadJobData();
        loadPanels();
        loadCompanyData();
        
           setSize(1540, 1000);
        setLayout(null);
        jTextField1.setBounds(20, 50, 1150, 50); // search by job name
       // jTextField2.setBounds(630, 50, 520, 50); // location
        searchbtn.setBounds(1200, 50, 130, 50);
//        jPanel1.setBounds(1, 120, 1480, 980);
        jScrollPane8.setBounds(10, 120, 1500, 630);
        
        setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTextField1 = new javax.swing.JTextField();
        searchbtn = new javax.swing.JButton();
        jScrollPane8 = new javax.swing.JScrollPane();
        jPanel1 = new javax.swing.JPanel();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenu2 = new javax.swing.JMenu();
        jMenuItem1 = new javax.swing.JMenuItem();
        jMenu3 = new javax.swing.JMenu();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jTextField1.setFont(new java.awt.Font("Lucida Bright", 0, 18)); // NOI18N
        jTextField1.setText("Find Jobs . . .");
        jTextField1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTextField1KeyReleased(evt);
            }
        });

        searchbtn.setFont(new java.awt.Font("Malgun Gothic", 0, 18)); // NOI18N
        searchbtn.setText("Search");
        searchbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchbtnActionPerformed(evt);
            }
        });

        jScrollPane8.setAlignmentX(4.0F);

        jPanel1.setBackground(new java.awt.Color(204, 255, 255));
        jPanel1.setLayout(new java.awt.GridLayout(0, 3, 30, 30));
        jScrollPane8.setViewportView(jPanel1);

        jMenu1.setText("Home");
        jMenuBar1.add(jMenu1);

        jMenu2.setText("History");
        jMenu2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenu2ActionPerformed(evt);
            }
        });

        jMenuItem1.setText("Applied job");
        jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem1ActionPerformed(evt);
            }
        });
        jMenu2.add(jMenuItem1);

        jMenuBar1.add(jMenu2);

        jMenu3.setText("Message");
        jMenuBar1.add(jMenu3);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 420, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(413, 413, 413)
                .addComponent(searchbtn, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(260, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addComponent(jScrollPane8, javax.swing.GroupLayout.PREFERRED_SIZE, 1183, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jTextField1)
                    .addComponent(searchbtn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(63, 63, 63)
                .addComponent(jScrollPane8, javax.swing.GroupLayout.DEFAULT_SIZE, 522, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void searchbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchbtnActionPerformed
   
    
    }//GEN-LAST:event_searchbtnActionPerformed


    private void jMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem1ActionPerformed
        
     //   insertJobData(job_name_TextField.getText(), company_address_TextField.getText(), job_salary_TextField.getText());
        
        Applied_jobs obj=new Applied_jobs();
        obj.setVisible(true);
    }//GEN-LAST:event_jMenuItem1ActionPerformed

    private void jMenu2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenu2ActionPerformed
      
    }//GEN-LAST:event_jMenu2ActionPerformed

    private void jTextField1KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField1KeyReleased
 String input = jTextField1.getText().trim().toLowerCase();
    
     boolean found = false;// check job is found or not
    // Clear the existing panels
    jPanel1.removeAll();

    if (input.isEmpty()) {
        // If search input is empty, reload all job panels
        loadJobData(); 
        loadPanels();
    } else {
        String jobName = null;
        // Filter job panels by job name
        for (JPanel panel : jobPanels) {
            JTextField jobNameField = (JTextField) panel.getComponent(0); // assuming jobNameField is the first component in panel
            jobName = jobNameField.getText().trim().toLowerCase();

            if (jobName.contains(input)) {
                jPanel1.add(panel);
                found = true;
            }
            
        }
         // If no matching job was found, show the message
    if (!found) {
        JOptionPane.showMessageDialog(Job_search.this, "Job not found.");
 
    }
        
    }

    jPanel1.revalidate();
    jPanel1.repaint();
        
    }//GEN-LAST:event_jTextField1KeyReleased
private void showPanel(JPanel panel) {
    panel.setVisible(true);
}
    private void insertJobData(String jobName, String companyAddress, String jobSalary) {
        String url = "jdbc:mysql://localhost:3306/jobfinder";
        String db_username = "root";
        String db_password = "root";

        try (Connection conn = DriverManager.getConnection(url, db_username, db_password)) {
            String sql = "INSERT INTO applied_jobs (job_name, company_address, job_salary) VALUES (?, ?, ?)";
            PreparedStatement pstmt = conn.prepareStatement(sql);
            pstmt.setString(1, jobName);
            pstmt.setString(2, companyAddress);
            pstmt.setString(3, jobSalary);
//            pstmt.setString(4, jobDescription);
            pstmt.executeUpdate();

//            JOptionPane.showMessageDialog(this, "Job saved successfully");
        } catch (SQLException e) {
            e.printStackTrace();
//            JOptionPane.showMessageDialog(this, "Error uploading job");
        }
    }
 private void loadJobData() {
     jobPanels.clear();
   String url = "jdbc:mysql://localhost:3306/jobfinder";
    String db_username = "root";
    String db_password = "root";

    try (Connection conn = DriverManager.getConnection(url, db_username, db_password)) {
        String sql = "SELECT job_name, company_address, job_salary, job_description FROM job_upload";
        PreparedStatement pstmt = conn.prepareStatement(sql);
        ResultSet rs = pstmt.executeQuery();

        while (rs.next()) {
            String jobName = rs.getString("job_name");
            String companyAddress = rs.getString("company_address");
            String jobSalary = rs.getString("job_salary");
            String jobDescription = rs.getString("job_description");

            // Create and add the job panel to the UI
            JPanel jobPanel = createJobPanel(jobName, companyAddress, jobSalary, jobDescription);
            jobPanels.add(jobPanel);
//            jPanel1.add(jobPanel);
        }
        jPanel1.revalidate();
        jPanel1.repaint();
    } catch (SQLException e) {
        e.printStackTrace();
    }
}
 
  private void loadPanels(){
        for (JPanel panel : jobPanels) {
            jPanel1.add(panel);
        }
   }

// public void printData(String name, String recruiter_id) {
//        this.recruiter_id = recruiter_id;
//        this.recruiter_name = name;
//        System.out.println("username=" + recruiter_name + "\n recruiter id=" + recruiter_id);
//    }

   private void loadCompanyData() {
    String url = "jdbc:mysql://localhost:3306/jobfinder?serverTimezone=UTC";
    String db_username = "root";
    String db_password = "root";

    try (Connection conn = DriverManager.getConnection(url, db_username, db_password)) {
//        System.out.println("Connection established");

        String sql = "SELECT * FROM company_registration";
        System.out.println("Executing SQL query: " + sql);
        PreparedStatement pstmt = conn.prepareStatement(sql);
        ResultSet rs = pstmt.executeQuery();

//        // Print ResultSet metadata
//        ResultSetMetaData rsmd = rs.getMetaData();
//        int columnsNumber = rsmd.getColumnCount();


        boolean hasData = false;
//        data.clear(); // Clear the data list before adding new data

        while (rs.next()) {
            recruiter_name=rs.getString("recruiter_name");
            recruiter_id=rs.getString("recruiter_id");
            
//             System.out.println(" job_search ------  \n recruite name ="+recruiter_name+"\n recruiter id="+recruiter_id);
        }
        
          System.out.println(" job_search ------  \n recruite name ="+recruiter_name+"\n recruiter id="+recruiter_id);

        

    } catch (SQLException e) {
        e.printStackTrace();
    }
}
  
  public void printText(String candidate_name,String candidate_id,String mob_no){
      this.candidate_name=candidate_name;
      this.candidate_id=candidate_id;
      this.mobile_no=mob_no;
          System.out.println("Job search  username: " + candidate_name+"\n candidate id="+candidate_id+"\n mobile no="+mob_no);
    }
    private JPanel createJobPanel(String jobName, String companyAddress, String jobSalary, String jobDescription) {
        System.out.println("panel create");
        JPanel panel = new JPanel(new AbsoluteLayout());
        panel.setPreferredSize(new Dimension(400, 500));
        
        JTextField jobNameField = new JTextField(jobName, 20);
         jobNameField.setFont(new Font("Bahnschrift", Font.PLAIN, 24));
        JTextField companyAddressField = new JTextField(companyAddress, 20);
        companyAddressField.setFont(new Font("Bahnschrift", Font.PLAIN, 18));
        JTextField jobSalaryField = new JTextField(jobSalary, 20);
        jobSalaryField.setFont(new Font("Bahnschrift", Font.PLAIN, 18));
        JTextArea jobDescriptionArea = new JTextArea(jobDescription, 5, 20);
        jobDescriptionArea.setFont(new Font("Bahnschrift", Font.PLAIN, 18));
        JButton ApplyButton = new JButton("Apply");

        jobNameField.setEditable(false);
        companyAddressField.setEditable(false);
        jobSalaryField.setEditable(false);
        jobDescriptionArea.setEditable(false);

        ApplyButton.setBackground(new Color(255, 102, 102));

        panel.add(jobNameField, new AbsoluteConstraints(20, 15, 350, 40));
        panel.add(companyAddressField, new AbsoluteConstraints(25, 70, 300, 30));
        panel.add(new JLabel("salary"), new AbsoluteConstraints(20, 110, 50, 30));
        panel.add(jobSalaryField, new AbsoluteConstraints(80, 110, 250, 40));
        panel.add(new JLabel("Description"), new AbsoluteConstraints(20, 170, 80, 30));
        panel.add(jobDescriptionArea, new AbsoluteConstraints(60, 200, 380, 160));
        panel.add(ApplyButton, new AbsoluteConstraints(200, 400, 100, 50));
        panel.setBackground(new Color(255, 200, 200));
        
        ApplyButton.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent evt) {
                Job_apply applyObj=new Job_apply();
//                recruiter_id= rs.getString("recruiter_id");
                applyObj.passData(candidate_name,candidate_id,mobile_no,jobName,jobSalary,recruiter_name,recruiter_id);
                applyObj.setVisible(true);
            }
        });

        return panel;
    }   
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
//         */
//    
//        //</editor-fold>

       try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (Exception ex) {
            java.util.logging.Logger.getLogger(Job_search.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }

        java.awt.EventQueue.invokeLater(() -> new Job_search().setVisible(true));
    
    
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenu jMenu3;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane8;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JButton searchbtn;
    // End of variables declaration//GEN-END:variables
}
